{"version":3,"sources":["RumReactNavigationTracking.tsx"],"names":["DdRum","RumReactNavigationTracking","startTrackingViews","navigationRef","listener","resolveNavigationStateChangeListener","handleRouteNavigation","getCurrentRoute","addListener","stopTrackingViews","removeListener","navigationStateChangeListener","route","key","screenName","name","startView","Date","getTime","event","data","state","routes","index"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AAGA,SAASA,KAAT,QAAsB,aAAtB;;AAIA;AACA;AACA;AACA,eAAe,MAAMC,0BAAN,CAAiC;AAE5C;;AAGA;AACJ;AACA;AACA;AACI,SAAOC,kBAAP,CAA0BC,aAA1B,EAA8E;AAC1E,QAAIA,aAAa,IAAI,IAArB,EAA2B;AACvB,YAAMC,QAAQ,GAAG,KAAKC,oCAAL,EAAjB;AACA,WAAKC,qBAAL,CAA2BH,aAAa,CAACI,eAAd,EAA3B;AACAJ,MAAAA,aAAa,CAACK,WAAd,CAA0B,OAA1B,EAAmCJ,QAAnC;AACH;AACJ;AAED;AACJ;AACA;AACA;;;AACI,SAAOK,iBAAP,CAAyBN,aAAzB,EAAuE;AACnEA,IAAAA,aAAa,SAAb,IAAAA,aAAa,WAAb,YAAAA,aAAa,CAAEO,cAAf,CAA8B,OAA9B,EAAuC,KAAKC,6BAA5C;AACH,GAvB2C,CAyB5C;;;AACA,SAAeL,qBAAf,CAAqCM,KAArC,EAA2F;AACvF,UAAMC,GAAG,GAAGD,KAAH,aAAGA,KAAH,uBAAGA,KAAK,CAAEC,GAAnB;AACA,UAAMC,UAAU,GAAGF,KAAH,aAAGA,KAAH,uBAAGA,KAAK,CAAEG,IAA1B;;AACA,QAAIF,GAAG,IAAI,IAAP,IAAeC,UAAU,IAAI,IAAjC,EAAuC;AACnCd,MAAAA,KAAK,CAACgB,SAAN,CAAgBH,GAAhB,EAAqBC,UAArB,EAAiC,IAAIG,IAAJ,GAAWC,OAAX,EAAjC,EAAuD,EAAvD;AACH;AACJ;;AAED,SAAeb,oCAAf,GAA0E;AACtE,QAAI,KAAKM,6BAAL,IAAsC,IAA1C,EAAgD;AAC5C;AACA,WAAKA,6BAAL,GAAsCQ,KAAD,IAA2C;AAAA;;AAC5E,aAAKb,qBAAL,gBAA2Ba,KAAK,CAACC,IAAjC,qEAA2B,YAAYC,KAAvC,sDAA2B,kBAAmBC,MAAnB,iBAA0BH,KAAK,CAACC,IAAhC,uEAA0B,aAAYC,KAAtC,uDAA0B,mBAAmBE,KAA7C,CAA3B;AACH,OAFD;AAGH;;AACD,WAAO,KAAKZ,6BAAZ;AACH;;AA1C2C;;gBAA3BV,0B","sourcesContent":["/*\n * Unless explicitly stated otherwise all files in this repository are licensed under the Apache License Version 2.0.\n * This product includes software developed at Datadog (https://www.datadoghq.com/).\n * Copyright 2016-Present Datadog, Inc.\n */\n\nimport type { EventArg, NavigationContainerRef, Route } from \"@react-navigation/native\";\nimport { DdRum } from '../../index';\n\ndeclare type NavigationListener = (event: EventArg<string, boolean, any>) => void | null\n\n/**\n * Provides RUM integration for the [ReactNavigation](https://reactnavigation.org/) API.\n */\nexport default class RumReactNavigationTracking {\n\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    private static navigationStateChangeListener: NavigationListener;\n\n    /**\n     * Starts tracking the NavigationContainer and sends a RUM View event every time the navigation route changed.\n     * @param navigationRef the reference to the real NavigationContainer.\n     */\n    static startTrackingViews(navigationRef: NavigationContainerRef | null): void {\n        if (navigationRef != null) {\n            const listener = this.resolveNavigationStateChangeListener();\n            this.handleRouteNavigation(navigationRef.getCurrentRoute());\n            navigationRef.addListener(\"state\", listener);\n        }\n    }\n\n    /**\n     * Stops tracking the NavigationContainer.\n     * @param navigationRef the reference to the real NavigationContainer.\n     */\n    static stopTrackingViews(navigationRef?: NavigationContainerRef): void {\n        navigationRef?.removeListener(\"state\", this.navigationStateChangeListener);\n    }\n\n    // eslint-disable-next-line\n    private static handleRouteNavigation(route: Route<string, object | undefined> | undefined) {\n        const key = route?.key;\n        const screenName = route?.name;\n        if (key != null && screenName != null) {\n            DdRum.startView(key, screenName, new Date().getTime(), {});\n        }\n    }\n\n    private static resolveNavigationStateChangeListener(): NavigationListener {\n        if (this.navigationStateChangeListener == null) {\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            this.navigationStateChangeListener = (event: EventArg<string, boolean, any>) => {\n                this.handleRouteNavigation(event.data?.state?.routes[event.data?.state?.index]);\n            };\n        }\n        return this.navigationStateChangeListener;\n    }\n\n}\n\n"]}